classdiagram ProcessorIO {

    // logicGates
    public class NANDGate {
        + boolean a;
        + boolean b;
        + boolean out;
    }

    public class InvertGate {
        + boolean a;
        + boolean out;
    }

    public class ANDGate {
        + boolean a;
        + boolean b;
        + boolean out;
    }

    public class NOTGate {
        + boolean a;
        + boolean out;
    }

    public class ORGate {
        + boolean a;
        + boolean b;
        + boolean out;
    }

    public class XORGate {
        + boolean a;
        + boolean b;
        + boolean out;
    }

    public class Invert{
        + boolean en;
        + boolean n7; 
        + boolean n6; 
        + boolean n5; 
        + boolean n4; 
        + boolean n3; 
        + boolean n2; 
        + boolean n1; 
        + boolean n0;
        + boolean nn7; 
        + boolean nn6; 
        + boolean nn5; 
        + boolean nn4; 
        + boolean nn3; 
        + boolean nn2; 
        + boolean nn1; 
        + boolean nn0;
    }


    // arithmetics
    public class HalfAdder {
        + boolean a;
        + boolean b;
        + boolean sum;
        + boolean carry;
        + XORGate xorGate;
        + ANDGate andGate;
    }

    public class FullAdder {
        + boolean a; 
        + boolean b;
        + boolean cin;
        + boolean sum;
        + boolean cout;
    }

    public class EightBitAdder {
        + boolean a7; 
        + boolean a6; 
        + boolean a5; 
        + boolean a4; 
        + boolean a3; 
        + boolean a2; 
        + boolean a1; 
        + boolean a0; 
        + boolean b7; 
        + boolean b6; 
        + boolean b5; 
        + boolean b4; 
        + boolean b3; 
        + boolean b2; 
        + boolean b1; 
        + boolean b0; 
        + boolean cin;    
        
        + boolean s7; 
        + boolean s6; 
        + boolean s5; 
        + boolean s4; 
        + boolean s3; 
        + boolean s2; 
        + boolean s1; 
        + boolean s0; 
        + boolean cout;
    }

}
