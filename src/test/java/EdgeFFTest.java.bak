/*
 * @Author: Dongze Yang
 * @Date: 2024-01-27 04:26:02
 * @LastEditors: Dongze Yang
 * @LastEditTime: 2024-01-27 08:43:16
 * @Description: 
 */
import processor.memory.EdgeFF;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;

import java.util.stream.Stream;

//import montiarc.rte.timesync.BooleanInPort;

public class EdgeFFTest {

    private EdgeFF edgeFF;

    @BeforeEach
    void setUp() {
        edgeFF = new EdgeFF();
        edgeFF.setUp();
        edgeFF.init();
    }

    static Stream<Arguments> testData() {
        return Stream.of(
            // 测试用例格式：clr, pr, d, cp, expectedQ, expectedNq
            Arguments.of(true, false, false, false, false, true),
            Arguments.of(false,	false,	false,	false,	false,	true),
            Arguments.of(false,	false,	true,	false,	false,	true),
            Arguments.of(false,	false,	false,	true,	false,	true),
            Arguments.of(false,	false,	true,	true,	true,	false),
            Arguments.of(false,	false,	false,	false,	true,	false),
            Arguments.of(false,	false,	true,	false,	true,	false),
            Arguments.of(false,	false,	false,	true,	true,	false),
            Arguments.of(false,	false,	true,	true,	true,	false)


        );
    }

    @ParameterizedTest
    @MethodSource("testData")
    void testEdgeFF(boolean clr, boolean pr, boolean d, boolean cp, boolean expectedQ, boolean expectedNq) {
        // 设置输入
        // rsff.setR(r);
        // rsff.setS(s);
        // rsff.setClr(clr);
        // rsff.setPr(pr);
        edgeFF.getClr().update(clr);
        edgeFF.getPr().update(pr);
        edgeFF.getD().update(d);
        edgeFF.getCp().update(cp);
        
        


        // System.out.println("-----------");
        // System.out.println(rsff.getR().getValue());
        // // 执行计算
        edgeFF.compute();

        // System.out.println("-----------");
        // System.out.println(expectedQ);
        // System.out.println(rsff.getQ().getValue());
        // System.out.println("-----------");

        // 验证输出
        Assertions.assertEquals(expectedQ, edgeFF.getQ().getValue(),"expected Q");
        Assertions.assertEquals(expectedNq, edgeFF.getNq().getValue(),"expected NQ");
    }
}
